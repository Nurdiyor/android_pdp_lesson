// Generated by Dagger (https://dagger.dev).
package uz.micro.star.lesson_41.di.module;

import android.app.Application;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import uz.micro.star.lesson_41.utils.SharedPref;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideSharedFactory implements Factory<SharedPref> {
  private final Provider<Application> applicationProvider;

  public AppModule_ProvideSharedFactory(Provider<Application> applicationProvider) {
    this.applicationProvider = applicationProvider;
  }

  @Override
  public SharedPref get() {
    return provideShared(applicationProvider.get());
  }

  public static AppModule_ProvideSharedFactory create(Provider<Application> applicationProvider) {
    return new AppModule_ProvideSharedFactory(applicationProvider);
  }

  public static SharedPref provideShared(Application application) {
    return Preconditions.checkNotNull(AppModule.INSTANCE.provideShared(application), "Cannot return null from a non-@Nullable @Provides method");
  }
}
