// Generated by Dagger (https://dagger.dev).
package uz.micro.star.lesson_41.fragments;

import androidx.viewbinding.ViewBinding;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerFragment_MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import uz.micro.star.lesson_41.viewmodels.DaggerViewModelFactory;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseFragment_MembersInjector<VB extends ViewBinding> implements MembersInjector<BaseFragment<VB>> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<DaggerViewModelFactory> providerFactoryProvider;

  public BaseFragment_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<DaggerViewModelFactory> providerFactoryProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.providerFactoryProvider = providerFactoryProvider;
  }

  public static <VB extends ViewBinding> MembersInjector<BaseFragment<VB>> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<DaggerViewModelFactory> providerFactoryProvider) {
    return new BaseFragment_MembersInjector<VB>(androidInjectorProvider, providerFactoryProvider);
  }

  @Override
  public void injectMembers(BaseFragment<VB> instance) {
    DaggerFragment_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectProviderFactory(instance, providerFactoryProvider.get());
  }

  @InjectedFieldSignature("uz.micro.star.lesson_41.fragments.BaseFragment.providerFactory")
  public static <VB extends ViewBinding> void injectProviderFactory(BaseFragment<VB> instance,
      DaggerViewModelFactory providerFactory) {
    instance.providerFactory = providerFactory;
  }
}
