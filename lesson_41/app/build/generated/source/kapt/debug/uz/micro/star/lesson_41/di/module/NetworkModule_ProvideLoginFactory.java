// Generated by Dagger (https://dagger.dev).
package uz.micro.star.lesson_41.di.module;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;
import uz.micro.star.lesson_41.retrofit.ApiService;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideLoginFactory implements Factory<ApiService> {
  private final Provider<Retrofit> retrofitProvider;

  public NetworkModule_ProvideLoginFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public ApiService get() {
    return provideLogin(retrofitProvider.get());
  }

  public static NetworkModule_ProvideLoginFactory create(Provider<Retrofit> retrofitProvider) {
    return new NetworkModule_ProvideLoginFactory(retrofitProvider);
  }

  public static ApiService provideLogin(Retrofit retrofit) {
    return Preconditions.checkNotNull(NetworkModule.INSTANCE.provideLogin(retrofit), "Cannot return null from a non-@Nullable @Provides method");
  }
}
